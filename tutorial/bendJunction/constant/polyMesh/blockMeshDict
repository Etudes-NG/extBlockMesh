/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

// Nb of cells
/*
// 2260
d0	5;
d1	1;
d2	2;
d3	10;
d4	3;
d5	10;
d6	2;
d7	2;
d8	2;
d9	5;
*/

// 100000
d0	17;
d1	3;
d2	5;
d3	30;
d4	8;
d5	30;
d6	7;
d7	5;
d8	5;
d9	17;

#inputMode merge

vertices
(
    (       163.03320099       -11.03547257      252.075300317) //      0
    (       163.03320099        11.03547257      252.075300317) //      1
    (      181.112660821        11.03547257      239.415926257) //      2
    (      181.112660821       -11.03547257      239.415926257) //      3
    (      186.820645067                -25      235.419152659) //      4
    (      157.325216744                -25      256.072073914) //      5
    (      157.325216744                 25      256.072073914) //      6
    (      186.820645067                 25      235.419152659) //      7
    (      121.715728415      28.2842709103               -100) //      8
    (       178.28427091      28.2842709103               -100) //      9
    (       178.28427091      13.2842713871               -100) //     10
    (       178.28427091     -28.2842715846               -100) //     11
    (      121.715728415     -28.2842715846               -100) //     12
    (      121.715728415     -13.2842713871               -100) //     13
    (       206.56854183      -56.568543179               -100) //     14
    (      93.4314568307     -56.5685431693               -100) //     15
    (      93.4314568307      56.5685418206               -100) //     16
    (      206.568541821      56.5685418206               -100) //     17
    (      206.568541821                 25               -100) //     18
    (      121.715728415      13.2842713871               -100) //     19
    (      93.4314568307                 30               -100) //     20
    (      206.568541821                -25               -100) //     21
    (       178.28427091     -13.2842713871               -100) //     22
    (      93.4314568307                -30               -100) //     23
    (       144.25122796                 25      174.623724471) //     24
    (      114.755799637                 25      195.276645725) //     25
    (      114.755799637                -25      195.276645725) //     26
    (       144.25122796                -25      174.623724471) //     27
    (     -135.598492956      28.2842709103      80.1733574929) //     28
    (     -154.946073968      28.2842709103      133.330399444) //     29
    (     -154.946073968      13.2842713871      133.330399444) //     30
    (     -154.946073968     -28.2842715846      133.330399444) //     31
    (     -135.598492956     -28.2842715846      80.1733574929) //     32
    (     -135.598492956     -13.2842713871      80.1733574929) //     33
    (     -164.619864362      -56.568543179      159.908920112) //     34
    (     -125.924702335     -56.5685431693      53.5948362005) //     35
    (     -125.924702335      56.5685418206      53.5948362005) //     36
    (     -164.619864359      56.5685418206      159.908920103) //     37
    (     -164.619864359                 25      159.908920103) //     38
    (     -135.598492956      13.2842713871      80.1733574929) //     39
    (     -125.924702335                 30      53.5948362005) //     40
    (     -164.619864359                -25      159.908920103) //     41
    (     -154.946073968     -13.2842713871      133.330399444) //     42
    (     -125.924702335                -30      53.5948362005) //     43
    (       126.07044907      13.2842713871      152.956715912) //     44
    (      100.613664182      13.2842713871      170.781748589) //     45
    (      89.7088908564      13.2842713871      109.622698279) //     46
    (      72.3293929347      13.2842713871      121.791953734) //     47
    (       126.07044907      28.2842715846      152.956715912) //     48
    (      100.613664182      28.2842715846      170.781748589) //     49
    (      89.7088908564      28.2842715846      109.622698279) //     50
    (      72.3293929347      28.2842715846      121.791953734) //     51
    (       126.07044907     -13.2842713871      152.956715912) //     52
    (      100.613664182     -13.2842713871      170.781748589) //     53
    (      89.7088908564     -13.2842713871      109.622698279) //     54
    (      72.3293929347     -13.2842713871      121.791953734) //     55
    (       126.07044907     -28.2842715846      152.956715912) //     56
    (      100.613664182     -28.2842715846      170.781748589) //     57
    (      89.7088908564     -28.2842715846      109.622698279) //     58
    (      72.3293929347     -28.2842715846      121.791953734) //     59
    (      144.251227967      -56.568543179      174.623724478) //     60
    (      71.5281115328     -56.5685431693      87.9556892035) //     61
    (      71.5281115328      56.5685418206      87.9556892035) //     62
    (       144.25122796      56.5685418206      174.623724471) //     63
    (      71.5281115328                 30      87.9556892035) //     64
    (      71.5281115328                -30      87.9556892035) //     65
    (      114.755799642      -56.568543179      195.276645734) //     66
    (      58.1872571424     -56.5685431693      97.2970560138) //     67
    (      58.1872571424      56.5685418206      97.2970560138) //     68
    (      114.755799637      56.5685418206      195.276645725) //     69
    (      58.1872571424                 30      97.2970560138) //     70
    (      58.1872571424                -30      97.2970560138) //     71
    (      138.543243714       -11.03547257      178.620498068) //     72
    (      120.463783883       -11.03547257      191.279872128) //     73
    (      120.463783883        11.03547257      191.279872128) //     74
    (      138.543243714        11.03547257      178.620498068) //     75
    (      106.977860404     -6.64213569356       166.32549042) //     76
    (      106.977860404      6.64213569356       166.32549042) //     77
    (      119.706252848      6.64213569356      157.412974081) //     78
    (      119.706252848     -6.64213569356      157.412974081) //     79
    (      76.6742674151     -6.64213569356       118.74963987) //     80
    (      76.6742674151      6.64213569356       118.74963987) //     81
    (       85.364016376      6.64213569356      112.665012142) //     82
    (       85.364016376     -6.64213569356      112.665012142) //     83
    (      68.1928979352                -15       90.291030906) //     84
    (      68.1928979352                 15       90.291030906) //     85
    (        61.52247074                -15      94.9617143112) //     86
    (        61.52247074                 15      94.9617143112) //     87
);

edges
(
);

blocks
(
    //      0
    hex (    72    75    74    73     3     2     1     0)  ($d6    $d8    $d0   ) simpleGrading (1 1 1)
    //      1
    hex (    26    27    72    73     5     4     3     0)  ($d8    $d1    $d0   ) simpleGrading (1 1 1)
    //      2
    hex (    25    26    73    74     6     5     0     1)  ($d6    $d1    $d0   ) simpleGrading (1 1 1)
    //      3
    hex (    24    25    74    75     7     6     1     2)  ($d8    $d1    $d0   ) simpleGrading (1 1 1)
    //      4
    hex (    24    75    72    27     7     2     3     4)  ($d1    $d6    $d0   ) simpleGrading (1 1 1)
    //      5
    hex (    44    46    50    48    10    19     8     9)  ($d9    $d2    $d3   ) simpleGrading (1 1 1)
    //      6
    hex (    48    50    62    63     9     8    16    17)  ($d9    $d4    $d3   ) simpleGrading (1 1 1)
    //      7
    hex (    46    64    62    50    19    20    16     8)  ($d4    $d2    $d3   ) simpleGrading (1 1 1)
    //      8
    hex (    24    44    48    63    18    10     9    17)  ($d4    $d2    $d3   ) simpleGrading (1 1 1)
    //      9
    hex (    44    52    54    46    10    22    13    19)  ($d6    $d9    $d3   ) simpleGrading (1 1 1)
    //     10
    hex (    24    27    52    44    18    21    22    10)  ($d6    $d4    $d3   ) simpleGrading (1 1 1)
    //     11
    hex (    52    56    58    54    22    11    12    13)  ($d7    $d9    $d3   ) simpleGrading (1 1 1)
    //     12
    hex (    56    60    61    58    11    14    15    12)  ($d4    $d9    $d3   ) simpleGrading (1 1 1)
    //     13
    hex (    27    60    56    52    21    14    11    22)  ($d7    $d4    $d3   ) simpleGrading (1 1 1)
    //     14
    hex (    54    58    61    65    13    12    15    23)  ($d7    $d4    $d3   ) simpleGrading (1 1 1)
    //     15
    hex (    46    54    65    64    19    13    23    20)  ($d6    $d4    $d3   ) simpleGrading (1 1 1)
    //     16
    hex (    48    63    69    49    44    24    25    45)  ($d4    $d8    $d2   ) simpleGrading (1 1 1)
    //     17
    hex (    74    75    78    77    25    24    44    45)  ($d8    $d4    $d1   ) simpleGrading (1 1 1)
    //     18
    hex (    72    79    78    75    27    52    44    24)  ($d4    $d6    $d1   ) simpleGrading (1 1 1)
    //     19
    hex (    26    53    42    41    25    45    30    38)  ($d4    $d5    $d6   ) simpleGrading (1 1 1)
    //     20
    hex (    29    49    69    37    30    45    25    38)  ($d5    $d4    $d2   ) simpleGrading (1 1 1)
    //     21
    hex (    73    74    77    76    26    25    45    53)  ($d6    $d4    $d1   ) simpleGrading (1 1 1)
    //     22
    hex (    31    57    53    42    34    66    26    41)  ($d5    $d7    $d4   ) simpleGrading (1 1 1)
    //     23
    hex (    56    57    66    60    52    53    26    27)  ($d8    $d4    $d7   ) simpleGrading (1 1 1)
    //     24
    hex (    72    73    76    79    27    26    53    52)  ($d8    $d4    $d1   ) simpleGrading (1 1 1)
    //     25
    hex (    45    49    51    47    30    29    28    39)  ($d2    $d9    $d5   ) simpleGrading (1 1 1)
    //     26
    hex (    49    69    68    51    29    37    36    28)  ($d4    $d9    $d5   ) simpleGrading (1 1 1)
    //     27
    hex (    47    51    68    70    39    28    36    40)  ($d2    $d4    $d5   ) simpleGrading (1 1 1)
    //     28
    hex (    45    47    55    53    30    39    33    42)  ($d9    $d6    $d5   ) simpleGrading (1 1 1)
    //     29
    hex (    53    55    59    57    42    33    32    31)  ($d9    $d7    $d5   ) simpleGrading (1 1 1)
    //     30
    hex (    57    59    67    66    31    32    35    34)  ($d9    $d4    $d5   ) simpleGrading (1 1 1)
    //     31
    hex (    55    71    67    59    33    43    35    32)  ($d4    $d7    $d5   ) simpleGrading (1 1 1)
    //     32
    hex (    47    70    71    55    39    40    43    33)  ($d4    $d6    $d5   ) simpleGrading (1 1 1)
    //     33
    hex (    48    49    51    50    44    45    47    46)  ($d8    $d9    $d2   ) simpleGrading (1 1 1)
    //     34
    hex (    77    78    82    81    45    44    46    47)  ($d8    $d9    $d1   ) simpleGrading (1 1 1)
    //     35
    hex (    78    79    83    82    44    52    54    46)  ($d6    $d9    $d1   ) simpleGrading (1 1 1)
    //     36
    hex (    76    77    81    80    53    45    47    55)  ($d6    $d9    $d1   ) simpleGrading (1 1 1)
    //     37
    hex (    62    68    70    64    50    51    47    46)  ($d8    $d2    $d4   ) simpleGrading (1 1 1)
    //     38
    hex (    82    83    84    85    46    54    65    64)  ($d6    $d4    $d1   ) simpleGrading (1 1 1)
    //     39
    hex (    81    82    85    87    47    46    64    70)  ($d8    $d4    $d1   ) simpleGrading (1 1 1)
    //     40
    hex (    80    81    87    86    55    47    70    71)  ($d6    $d4    $d1   ) simpleGrading (1 1 1)
    //     41
    hex (    62    63    69    68    50    48    49    51)  ($d9    $d8    $d4   ) simpleGrading (1 1 1)
    //     42
    hex (    56    58    59    57    52    54    55    53)  ($d9    $d8    $d7   ) simpleGrading (1 1 1)
    //     43
    hex (    76    80    83    79    53    55    54    52)  ($d9    $d8    $d1   ) simpleGrading (1 1 1)
    //     44
    hex (    61    65    71    67    58    54    55    59)  ($d7    $d8    $d4   ) simpleGrading (1 1 1)
    //     45
    hex (    80    86    84    83    55    71    65    54)  ($d4    $d8    $d1   ) simpleGrading (1 1 1)
    //     46
    hex (    60    61    67    66    56    58    59    57)  ($d9    $d8    $d4   ) simpleGrading (1 1 1)
    //     47
    hex (    76    79    78    77    73    72    75    74)  ($d8    $d6    $d4   ) simpleGrading (1 1 1)
    //     48
    hex (    80    83    82    81    76    79    78    77)  ($d8    $d6    $d9   ) simpleGrading (1 1 1)
    //     49
    hex (    84    85    87    86    83    82    81    80)  ($d6    $d8    $d4   ) simpleGrading (1 1 1)
);

boundary
(
    InletSmall
    {
        type patch;
        faces
        (
            (     0     1     2     3) //      0
            (     0     3     4     5) //      1
            (     0     5     6     1) //      2
            (     1     6     7     2) //      3
            (     2     7     4     3) //      4
      );
    }
    Outlet
    {
        type patch;
        faces
        (
            (     8    19    10     9) //      0
            (     8     9    17    16) //      1
            (     8    16    20    19) //      2
            (     9    10    18    17) //      3
            (    10    19    13    22) //      4
            (    10    22    21    18) //      5
            (    11    22    13    12) //      6
            (    11    12    15    14) //      7
            (    11    14    21    22) //      8
            (    12    13    23    15) //      9
            (    13    19    20    23) //     10
      );
    }
    SmallPipe
    {
        type wall;
        faces
        (
            (     4     7    24    27) //      0
            (     4    27    26     5) //      1
            (     5    26    25     6) //      2
            (     6    25    24     7) //      3
      );
    }
    Inlet
    {
        type patch;
        faces
        (
            (    28    29    30    39) //      0
            (    28    36    37    29) //      1
            (    28    39    40    36) //      2
            (    29    37    38    30) //      3
            (    30    42    33    39) //      4
            (    30    38    41    42) //      5
            (    31    32    33    42) //      6
            (    31    34    35    32) //      7
            (    31    42    41    34) //      8
            (    32    35    43    33) //      9
            (    33    43    40    39) //     10
      );
    }
    BigPipe
    {
        type wall;
        faces
        (
            (    14    21    27    60) //      0
            (    14    15    61    60) //      1
            (    15    23    65    61) //      2
            (    16    17    63    62) //      3
            (    16    62    64    20) //      4
            (    17    63    24    18) //      5
            (    18    24    27    21) //      6
            (    20    64    65    23) //      7
            (    24    63    69    25) //      8
            (    25    69    37    38) //      9
            (    25    38    41    26) //     10
            (    26    41    34    66) //     11
            (    26    66    60    27) //     12
            (    34    66    67    35) //     13
            (    35    67    71    43) //     14
            (    36    68    69    37) //     15
            (    36    40    70    68) //     16
            (    40    43    71    70) //     17
            (    60    61    67    66) //     18
            (    61    65    71    67) //     19
            (    62    63    69    68) //     20
            (    62    68    70    64) //     21
            (    64    85    84    65) //     22
            (    64    70    87    85) //     23
            (    65    84    86    71) //     24
            (    70    71    86    87) //     25
            (    84    85    87    86) //     26
      );
    }
);

